name: CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  macos-14:
    name: Build macOS 14 (Swift 5.10)
    runs-on: macos-14
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    - name: Build
      run: swift build -v
  macos-15:
    name: Build macOS 15 (Swift 6.0)
    runs-on: macos-15
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    - name: Build
      run: swift build -v
    - name: Run tests
      run: swift test -v
  ios-15:
    name: Build on iOS 15
    runs-on: macos-15
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    - name: Set up Xcode 16.2
      run: sudo xcode-select -s /Applications/Xcode_16.2.app/Contents/Developer
    - name: Restore Cached iOS Simulator Runtime
      uses: actions/cache@v4
      id: cache-ios-15-runtime
      with:
        path: /Library/Developer/CoreSimulator/Profiles/Runtimes
        key: ios-runtime-15.5
    - name: Set up iOS 15 simulator runtime (if not cached)
      if: steps.cache-ios-15-runtime.outputs.cache-hit != 'true'
      run: sudo xcodes runtimes install "iOS 15.5"
    - name: Check if iOS 15 simulator exists
      id: check-simulator
      run: |
        SIMULATOR_ID=$(xcrun simctl list devices | grep "iPhone 13 Pro (15.5)" | head -n 1 | awk '{print $4}' | tr -d '()')
        if [ -z "$SIMULATOR_ID" ]; then
          echo "simulator_id=false" >> $GITHUB_OUTPUT
        else
          echo "simulator_id=$SIMULATOR_ID" >> $GITHUB_OUTPUT
        fi
    - name: Create iOS 15 simulator
      if: steps.check-simulator.outputs.simulator_id == 'false'
      run: |
        SIMULATOR_ID=$(xcrun simctl create "iPhone 13 Pro (15.5)" "iPhone 13 Pro" "com.apple.CoreSimulator.SimRuntime.iOS-15-5")
        echo "simulator_id=$SIMULATOR_ID" >> $GITHUB_OUTPUT
    - name: Build
      run: xcodebuild build -scheme EventSource -sdk iphonesimulator -destination 'id=${{ steps.check-simulator.outputs.simulator_id }}'
    - name: Run tests
      run: xcodebuild test -scheme EventSource -sdk iphonesimulator -destination 'id=${{ steps.check-simulator.outputs.simulator_id }}'
  ubuntu:
    name: Build Linux
    runs-on: ubuntu-latest
    container:
      image: swift:latest
    steps:
    - uses: actions/checkout@v4
    - name: Build
      run: swift build -v
    - name: Run tests
      run: swift test -v
